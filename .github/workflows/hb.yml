name: Publish Helm Chart

on:
  push:
    branches:
      - main
    
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      actions: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for full git history

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.14.0'

      - name: Package Helm Chart
        run: |
          # Clean previous packages
          rm -rf packaged-charts
          mkdir -p packaged-charts
          
          # Package chart
          helm package helm-chart/ -d packaged-charts
          
          # Generate index
          helm repo index packaged-charts --url https://github.com/${{ github.repository }}/raw/main/packaged-charts/

      - name: Upload Chart Artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart-package
          path: packaged-charts/*
          retention-days: 90
          overwrite: true

      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add packaged-charts/
          git commit -m "Update Helm chart package [skip ci]"
          git push origin main

      - name: Create Deployment Status
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // Create deployment
              const deployment = await github.rest.repos.createDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.ref,
                environment: 'helm-repo',
                description: 'Helm Chart Repository v${{ github.ref_name }}',
                auto_merge: false,
                required_contexts: []
              });

              // Update status
              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.data.id,
                state: 'success',
                environment_url: 'https://github.com/${{ github.repository }}/tree/main/packaged-charts',
                log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
              });
            } catch (error) {
              core.error(`Deployment failed: ${error.message}`);
              core.setFailed('Failed to create deployment');
            }
