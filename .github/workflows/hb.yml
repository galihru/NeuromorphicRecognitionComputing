name: Publish Helm Chart to ArtifactHub

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.14.0'

      - name: Package Helm Chart
        run: |
          mkdir -p packaged-charts
          helm package helm-chart/ -d packaged-charts
          helm repo index packaged-charts --url https://raw.githubusercontent.com/${{ github.repository }}/main/packaged-charts/

      - name: Push to Repository
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add packaged-charts/
          git commit -m "Update Helm chart package [skip ci]"
          git push origin main

      - name: Register with ArtifactHub API
        env:
          AH_API_KEY_ID: ${{ secrets.AH_API_KEY_ID }}
          AH_API_KEY_SECRET: ${{ secrets.AH_API_KEY_SECRET }}
        run: |
          curl -X PUT \
            -H "Authorization: Bearer $AH_API_KEY_SECRET" \
            -H "X-API-KEY-ID: $AH_API_KEY_ID" \
            -H "Content-Type: application/json" \
            -d '{
              "repository_url": "https://raw.githubusercontent.com/${{ github.repository }}/main/packaged-charts/"
            }' \
            "https://artifacthub.io/api/v1/repositories"

      - name: Create Deployment Status
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const deployment = await github.rest.repos.createDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.ref,
                environment: 'artifacthub',
                description: 'Helm Chart published to ArtifactHub',
                auto_merge: false
              });

              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.data.id,
                state: 'success',
                environment_url: `https://artifacthub.io/packages/helm/${context.repo.owner}/${context.repo.repo}`,
                log_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID}`
              });
            } catch (error) {
              core.error(`Deployment failed: ${error.message}`);
            }
