name: Publish Helm Chart

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.14.0'

      - name: Package Helm Chart
        run: |
          mkdir -p packaged-charts
          helm package helm-chart/ -d packaged-charts
          helm repo index packaged-charts --url https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Helm Chart
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./packaged-charts/*
          asset_name: helm-chart-${{ github.ref_name }}.tgz
          asset_content_type: application/gzip

      - name: Create Deployment
        id: create_deployment
        uses: actions/github-script@v7
        env:
          PACKAGE_NAME: "snn-expression-detection"
        with:
          script: |
            try {
              const deployment = await github.rest.repos.createDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.ref,
                environment: 'artifacthub',
                description: 'Helm Chart Release ${{ github.ref_name }}',
                auto_merge: false,
                required_contexts: []
              });
              return deployment.data.id;
            } catch (error) {
              core.error("Failed to create deployment: " + error.message);
              return null;
            }

      - name: Update Deployment Status
        if: steps.create_deployment.outputs.result != null
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: ${{ steps.create_deployment.outputs.result }},
                state: 'success',
                environment_url: 'https://artifacthub.io/packages/helm/${{ github.repository_owner }}/${{ env.PACKAGE_NAME }}',
                log_url: 'https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}'
              });
            } catch (error) {
              core.error("Failed to update deployment status: " + error.message);
            }
